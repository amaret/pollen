gunit pol;

////////////////////////////////////////////////////
//test rule: parse composition defn
unit:
"package cc.arduino

import Duemilanove as Board
from Board import Led
from Board import Mcu
from Mcu import GlobalInterrupts
from Mcu import TimerMilli8BitTimer0 as TD

from pollen.time import Time
from pollen.events import Events

composition Environment {       # This should extend Board when composition inheritance exits!

        export GlobalInterrupts
        export Led
        export Mcu
        export Mcu.reset
        export Mcu.wait
        export Events.run
        export Events.post
        export Events.postFromInterrupt

        host Environment() {
        }
        host bool fcn1(uint8 x, bool y) {
        }
        public host setHandler(Handler.handle h) { }
	public host uint32 getSystemFrequency() {
 			uint8 x, y=7, z=1, s
			int16 t
 			int8 arr[] = { 3, 2, 1 }
                        int32 arr1[7][3]
                        int32 arr2[y]
            		int32 arr3[2][2] = { {1, 2} , {3, 4} }
                        Environment e
        }

}" -> ""

////////////////////////////////////////////////////
//test rule: parse composition with non-host fcn (error)
unit:
"package cc.arduino

composition Environment {       

        bool fcn1(uint8 x, bool y) {
        }
}" -> ""

////////////////////////////////////////////////////
//test rule: parse composition with injected code as feature
unit:
"package cc.arduino

composition Environment {       

        host bool fcn1(uint8 x, bool y) {
        }
	+{ #include <avr/io.h> 
           #include <avr/interrupt.h> }+

        +{ ISR( }+
        +{name}+
        +{ ) { }+
        +{isr()}+
    +{;} }+
}" -> ""

